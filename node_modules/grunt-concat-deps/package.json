{
  "name": "grunt-concat-deps",
  "description": "Grunt plugin for concatenating files according to their declarative module definitions.",
  "version": "0.2.1",
  "homepage": "https://github.com/leoselig/grunt-concat-deps",
  "author": {
    "name": "Leo Selig",
    "email": "selig.git@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/leoselig/grunt-concat-deps.git"
  },
  "bugs": {
    "url": "https://github.com/leoselig/grunt-concat-deps/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/leoselig/grunt-concat-deps/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1",
    "yuidocjs": "~0.3.45",
    "underscore": "~1.5.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readmeFilename": "README.md",
  "gitHead": "cfd880fff3ef0448bb0e8b08fed1d4e16d377f93",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "grunt-contrib-clean": "~0.4.1",
    "grunt": "~0.4.1",
    "esprima": "~1.0.4",
    "yuidocjs": "~0.3.45",
    "underscore": "~1.5.2",
    "grunt-contrib-nodeunit": "~0.2.1",
    "grunt-contrib-jshint": "~0.6.4"
  },
  "license": "MIT",
  "readme": "# grunt-concat-deps\r\n\r\n> Grunt plugin for concatenating files according to their declarative module definitions.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-concat-deps --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-concat-deps');\r\n```\r\n\r\n## Module definition\r\n\r\nThe declarative module definition relies on the YuiDoc synax (http://yui.github.io/yuidoc/syntax/) that makes use of the annotations `@module` and `@requires`.\r\nIt is possible to declare multiple modules in one file. Please note that in this case, dependencies inside of one single file are ignored.\r\nFind below an example of two files.\r\n#####Module_A.js\r\n```js\r\n/**\r\n * @module A1\r\n * @requires B\r\n */\r\nvar A1 = function() {\r\n\r\n}\r\n\r\n/**\r\n * @module A2\r\n * @requires A1\r\n */\r\nvar A2 = function() {\r\n\r\n}\r\n```\r\n#####Module_B.js\r\n```js\r\n/**\r\n * @module B\r\n */\r\nvar B = function() {\r\n\r\n}\r\n```\r\n\r\n## The \"concat_deps\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `concat_deps` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  concat_deps: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Taget configuration\r\n\r\n#### [target].options.intro\r\nType: `String`\r\nDefault value: `null`\r\n\r\nThe file to be used as an intro (e.g. license information or beginning of self invoking function).\r\n\r\n#### [target].options.outro\r\nType: `String`\r\nDefault value: `null`\r\n\r\nThe file to be used as an outro (e.g. end of self invoking function).\r\n\r\n#### [target].options.out\r\nType: `String`\r\nDefault value: `null`\r\n\r\nThe file into which the output should be written.\r\n\r\n#### [target].options.joinString\r\nType: `String`\r\nDefault value: `\\n`\r\n\r\nThe 'glue string' to be used when concatenating the files.\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  main: {\r\n\toptions: {\r\n\t\tout:   'out/out.js'\r\n\t},\r\n\tfiles:   {\r\n\t\tsrc:  'src/**/*.js'\r\n\t}\r\n})\r\n```\r\n\r\n#### Custom Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  main: {\r\n    options: {\r\n\t\tintro: 'src/intro.js',\r\n\t\toutro: 'src/outro.js',\r\n\t\tout:   'out/out.js',\r\n        joinString: '\\n'\r\n\t},\r\n\tfiles:   {\r\n\t\tsrc:  'src/**/*.js'\r\n\t}\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n - ```0.2.0``` Allowed concatenation of undeclared modules\r\n - ```0.1.0``` Core functionality implemented\r\n",
  "_id": "grunt-concat-deps@0.2.1",
  "_from": "grunt-concat-deps@~0.2.1"
}
